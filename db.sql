-- MySQL Script generated by MySQL Workbench
-- Model: UniBook    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema unibook
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `unibook` ;

-- -----------------------------------------------------
-- Schema unibook
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `unibook` DEFAULT CHARACTER SET utf8 ;
USE `unibook` ;

-- -----------------------------------------------------
-- Table `unibook`.`account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`account` ;

CREATE TABLE IF NOT EXISTS `unibook`.`account` (
  `code` INT(11) NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(30) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `type` ENUM('Professore', 'Studente') NOT NULL,
  PRIMARY KEY (`code`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `unibook`.`course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`course` ;

CREATE TABLE IF NOT EXISTS `unibook`.`course` (
  `code` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL DEFAULT NULL,
  `year` YEAR(4) NULL DEFAULT NULL,
  PRIMARY KEY (`code`),
  UNIQUE INDEX `name_year_UNIQUE` (`name` ASC, `year` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `unibook`.`professor_course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`professor_course` ;

CREATE TABLE IF NOT EXISTS `unibook`.`professor_course` (
  `professor` INT(11) NOT NULL,
  `course` INT(11) NOT NULL,
  PRIMARY KEY (`professor`, `course`),
  INDEX `fk_course_idx` (`course` ASC) VISIBLE,
  CONSTRAINT `fk_professor_course_account`
    FOREIGN KEY (`professor`)
    REFERENCES `unibook`.`account` (`code`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_professor_course_course1`
    FOREIGN KEY (`course`)
    REFERENCES `unibook`.`course` (`code`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `unibook`.`book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`book` ;

CREATE TABLE IF NOT EXISTS `unibook`.`book` (
  `course` INT(11) NOT NULL,
  `isbn` CHAR(13) NOT NULL,
  `title` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`course`, `isbn`),
  INDEX `fk_book_course1_idx` (`course` ASC) VISIBLE,
  CONSTRAINT `fk_book_course1`
    FOREIGN KEY (`course`)
    REFERENCES `unibook`.`course` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unibook`.`sellable_book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`sellable_book` ;

CREATE TABLE IF NOT EXISTS `unibook`.`sellable_book` (
  `code` INT NOT NULL AUTO_INCREMENT,
  `course` INT(11) NOT NULL,
  `isbn` CHAR(13) NOT NULL,
  `seller` INT(11) NOT NULL,
  `price` FLOAT NOT NULL,
  `buyer` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`code`),
  INDEX `fk_sellable_book_account1_idx` (`seller` ASC) VISIBLE,
  INDEX `fk_sellable_book_account2_idx` (`buyer` ASC) VISIBLE,
  INDEX `fk_sellable_book_book1_idx` (`course` ASC, `isbn` ASC) VISIBLE,
  CONSTRAINT `fk_sellable_book_account1`
    FOREIGN KEY (`seller`)
    REFERENCES `unibook`.`account` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sellable_book_account2`
    FOREIGN KEY (`buyer`)
    REFERENCES `unibook`.`account` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sellable_book_book1`
    FOREIGN KEY (`course` , `isbn`)
    REFERENCES `unibook`.`book` (`course` , `isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `unibook`.`negotiation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unibook`.`negotiation` ;

CREATE TABLE IF NOT EXISTS `unibook`.`negotiation` (
  `book` INT NOT NULL,
  `student` INT(11) NOT NULL,
  PRIMARY KEY (`book`, `student`),
  INDEX `fk_negotiation_account1_idx` (`student` ASC) VISIBLE,
  CONSTRAINT `fk_negotiation_sellable_book1`
    FOREIGN KEY (`book`)
    REFERENCES `unibook`.`sellable_book` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_negotiation_account1`
    FOREIGN KEY (`student`)
    REFERENCES `unibook`.`account` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `unibook` ;

-- -----------------------------------------------------
-- View `unibook`.`view_course`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `unibook`.`view_course` ;
USE `unibook`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `unibook`.`view_course` AS select `unibook`.`course`.`code` AS `code`,`unibook`.`course`.`name` AS `name`,`unibook`.`course`.`year` AS `startYear`,`unibook`.`course`.`year` + 1 AS `endYear` from `unibook`.`course`;

-- -----------------------------------------------------
-- View `unibook`.`view_professor_course`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `unibook`.`view_professor_course` ;
USE `unibook`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `unibook`.`view_professor_course` AS select `unibook`.`account`.`code` AS `professoreCode`,`unibook`.`account`.`name` AS `professorName`,`unibook`.`account`.`surname` AS `professorSurname`,`unibook`.`account`.`email` AS `professorEmail`,`unibook`.`account`.`password` AS `professorPassword`,`view_course`.`code` AS `courseCode`,`view_course`.`name` AS `courseName`,`view_course`.`startYear` AS `courseStartYear`,`view_course`.`endYear` AS `courseEndYear` from ((`unibook`.`professor_course` join `unibook`.`account` on(`unibook`.`account`.`code` = `unibook`.`professor_course`.`professor`)) join `unibook`.`view_course` on(`view_course`.`code` = `unibook`.`professor_course`.`course`));

-- -----------------------------------------------------
-- View `unibook`.`view_sellable_book`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `unibook`.`view_sellable_book` ;
USE `unibook`;
CREATE  OR REPLACE VIEW `view_sellable_book` AS
SELECT book.*, sellable_book.code, sellable_book.price,
se.code as sellerCode, se.email as sellerEmail, se.name as sellerName, se.surname as sellerSurname,
bu.code as buyerCode, bu.email as buyerEmail, bu.name as buyerName, bu.surname as buyerSurname
FROM sellable_book
INNER JOIN book ON book.isbn = sellable_book.isbn AND book.course = sellable_book.course
INNER JOIN view_course ON sellable_book.course = view_course.code
INNER JOIN account se ON seller = se.code
LEFT JOIN account bu ON buyer = bu.code;

-- -----------------------------------------------------
-- View `unibook`.`view_negotiation`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `unibook`.`view_negotiation` ;
USE `unibook`;
CREATE  OR REPLACE VIEW `view_negotiation` AS
SELECT negotiation.*, view_sellable_book.*,
account.code as studentCode, account.email as studentEmail, account.name as studentName, account.surname as studentSurname
FROM negotiation
INNER JOIN view_sellable_book ON view_sellable_book.code = book
INNER JOIN account ON account.code = student;
SET SQL_MODE = '';
DROP USER IF EXISTS unibook_user;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'unibook_user' IDENTIFIED BY 'ISPW';

GRANT ALL ON TABLE `unibook`.`account` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`book` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`course` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`negotiation` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`professor_course` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`sellable_book` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`view_course` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`view_negotiation` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`view_professor_course` TO 'unibook_user';
GRANT ALL ON TABLE `unibook`.`view_sellable_book` TO 'unibook_user';

-- -----------------------------------------------------
-- Data for table `unibook`.`account`
-- -----------------------------------------------------
START TRANSACTION;
USE `unibook`;
INSERT INTO `unibook`.`account` (`code`, `email`, `password`, `name`, `surname`, `type`) VALUES (1, 'professore@uniroma2.eu', 'professore', 'Professore', 'Uniroma2', 'Professore');
INSERT INTO `unibook`.`account` (`code`, `email`, `password`, `name`, `surname`, `type`) VALUES (2, 'francesco.masci.02@students.uniroma2.eu', 'studente', 'Francesco', 'Masci', 'Studente');
INSERT INTO `unibook`.`account` (`code`, `email`, `password`, `name`, `surname`, `type`) VALUES (3, 'studente@students.uniroma2.eu', 'studente', 'Studente', 'Uniroma2', 'Studente');

COMMIT;


-- -----------------------------------------------------
-- Data for table `unibook`.`course`
-- -----------------------------------------------------
START TRANSACTION;
USE `unibook`;
INSERT INTO `unibook`.`course` (`code`, `name`, `year`) VALUES (1, 'Basi Di Dati E Conoscenza', 2023);
INSERT INTO `unibook`.`course` (`code`, `name`, `year`) VALUES (2, 'Ingegneria Del Software E Progettazione Web', 2023);
INSERT INTO `unibook`.`course` (`code`, `name`, `year`) VALUES (3, 'Ricerca Operativa', 2023);

COMMIT;


-- -----------------------------------------------------
-- Data for table `unibook`.`professor_course`
-- -----------------------------------------------------
START TRANSACTION;
USE `unibook`;
INSERT INTO `unibook`.`professor_course` (`professor`, `course`) VALUES (1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `unibook`.`book`
-- -----------------------------------------------------
START TRANSACTION;
USE `unibook`;
INSERT INTO `unibook`.`book` (`course`, `isbn`, `title`) VALUES (1, '9788838656545', 'Basi di dati');
INSERT INTO `unibook`.`book` (`course`, `isbn`, `title`) VALUES (3, '9789387972209', 'Linear programming');
INSERT INTO `unibook`.`book` (`course`, `isbn`, `title`) VALUES (2, '9788891904591', 'Applicare UML e i pattern: analisi e progettazione orientata agli oggetti');

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
